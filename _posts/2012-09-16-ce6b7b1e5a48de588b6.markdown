---
author: ths
comments: true
date: 2012-09-16 07:37:00+00:00
layout: post
slug: c%e6%b7%b1%e5%a4%8d%e5%88%b6
title: C#深复制
wordpress_id: 868
categories:
- 技术
tags:
- 深复制
---

对于对象来说，平时的复制仅仅是地址的复制，叫做浅复制，对象的完全复制叫做深复制，在C#中实现深复制提供两种方法：反射方法和序列化方法：





1.反射方法（用反射获取对象的属性） 
    
    public static object GetDeepCopy(object obj)
    {
        Object DeepCopyObj;
                 
        DeepCopyObj = System.Activator.CreateInstance(obj.GetType());   //创建引用对象 
        System.Reflection.PropertyInfo[] memberCollection = obj.GetType().GetProperties();
        foreach (System.Reflection.PropertyInfo member in memberCollection)
        {
            member.SetValue(DeepCopyObj, member.GetValue(obj, null), null);
        }
                 
        return DeepCopyObj;
    } 





上面的方法有一个局限性，只适用于属性是常规类型的，如果对象的属性也是引用类型的，则不能实现，期待高手指教好的方法。





2.序列化方法（先序列化，再反序列化）

    
    public T GetDeepCopy<T>(T serializableObject)
    {
        object objCopy = null;
    
        MemoryStream stream = new MemoryStream();
        BinaryFormatter binFormatter = new BinaryFormatter();
        binFormatter.Serialize(stream, serializableObject);
        stream.Position = 0;
        objCopy = (T) binFormatter.Deserialize(stream);
        stream.Close();
        return (T) objCopy;
    
    }



